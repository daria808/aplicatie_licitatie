#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client_ADBD
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AuctionApp")]
	public partial class AuctionAppDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAuction(Auction instance);
    partial void UpdateAuction(Auction instance);
    partial void DeleteAuction(Auction instance);
    partial void InsertAuction_type(Auction_type instance);
    partial void UpdateAuction_type(Auction_type instance);
    partial void DeleteAuction_type(Auction_type instance);
    partial void InsertBook(Book instance);
    partial void UpdateBook(Book instance);
    partial void DeleteBook(Book instance);
    partial void InsertBook_condition(Book_condition instance);
    partial void UpdateBook_condition(Book_condition instance);
    partial void DeleteBook_condition(Book_condition instance);
    partial void InsertJewelry(Jewelry instance);
    partial void UpdateJewelry(Jewelry instance);
    partial void DeleteJewelry(Jewelry instance);
    partial void InsertJewelry_type(Jewelry_type instance);
    partial void UpdateJewelry_type(Jewelry_type instance);
    partial void DeleteJewelry_type(Jewelry_type instance);
    partial void InsertPainting(Painting instance);
    partial void UpdatePainting(Painting instance);
    partial void DeletePainting(Painting instance);
    partial void InsertPainting_type(Painting_type instance);
    partial void UpdatePainting_type(Painting_type instance);
    partial void DeletePainting_type(Painting_type instance);
    partial void InsertPost(Post instance);
    partial void UpdatePost(Post instance);
    partial void DeletePost(Post instance);
    partial void InsertPost_status(Post_status instance);
    partial void UpdatePost_status(Post_status instance);
    partial void DeletePost_status(Post_status instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProduct_image(Product_image instance);
    partial void UpdateProduct_image(Product_image instance);
    partial void DeleteProduct_image(Product_image instance);
    partial void InsertSculpture(Sculpture instance);
    partial void UpdateSculpture(Sculpture instance);
    partial void DeleteSculpture(Sculpture instance);
    partial void InsertSculpture_material(Sculpture_material instance);
    partial void UpdateSculpture_material(Sculpture_material instance);
    partial void DeleteSculpture_material(Sculpture_material instance);
    partial void InsertUser_role(User_role instance);
    partial void UpdateUser_role(User_role instance);
    partial void DeleteUser_role(User_role instance);
    partial void InsertUser_type(User_type instance);
    partial void UpdateUser_type(User_type instance);
    partial void DeleteUser_type(User_type instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertWatch(Watch instance);
    partial void UpdateWatch(Watch instance);
    partial void DeleteWatch(Watch instance);
    partial void InsertWatch_mechanism(Watch_mechanism instance);
    partial void UpdateWatch_mechanism(Watch_mechanism instance);
    partial void DeleteWatch_mechanism(Watch_mechanism instance);
    partial void InsertWatch_type(Watch_type instance);
    partial void UpdateWatch_type(Watch_type instance);
    partial void DeleteWatch_type(Watch_type instance);
    #endregion
		
		public AuctionAppDataContext() : 
				base(global::Client_ADBD.Properties.Settings.Default.AuctionAppConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public AuctionAppDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AuctionAppDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AuctionAppDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AuctionAppDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Auction> Auctions
		{
			get
			{
				return this.GetTable<Auction>();
			}
		}
		
		public System.Data.Linq.Table<Auction_type> Auction_types
		{
			get
			{
				return this.GetTable<Auction_type>();
			}
		}
		
		public System.Data.Linq.Table<Book> Books
		{
			get
			{
				return this.GetTable<Book>();
			}
		}
		
		public System.Data.Linq.Table<Book_condition> Book_conditions
		{
			get
			{
				return this.GetTable<Book_condition>();
			}
		}
		
		public System.Data.Linq.Table<Jewelry> Jewelries
		{
			get
			{
				return this.GetTable<Jewelry>();
			}
		}
		
		public System.Data.Linq.Table<Jewelry_type> Jewelry_types
		{
			get
			{
				return this.GetTable<Jewelry_type>();
			}
		}
		
		public System.Data.Linq.Table<Painting> Paintings
		{
			get
			{
				return this.GetTable<Painting>();
			}
		}
		
		public System.Data.Linq.Table<Painting_type> Painting_types
		{
			get
			{
				return this.GetTable<Painting_type>();
			}
		}
		
		public System.Data.Linq.Table<Post> Posts
		{
			get
			{
				return this.GetTable<Post>();
			}
		}
		
		public System.Data.Linq.Table<Post_status> Post_status
		{
			get
			{
				return this.GetTable<Post_status>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Product_image> Product_images
		{
			get
			{
				return this.GetTable<Product_image>();
			}
		}
		
		public System.Data.Linq.Table<Sculpture> Sculptures
		{
			get
			{
				return this.GetTable<Sculpture>();
			}
		}
		
		public System.Data.Linq.Table<Sculpture_material> Sculpture_materials
		{
			get
			{
				return this.GetTable<Sculpture_material>();
			}
		}
		
		public System.Data.Linq.Table<User_role> User_roles
		{
			get
			{
				return this.GetTable<User_role>();
			}
		}
		
		public System.Data.Linq.Table<User_type> User_types
		{
			get
			{
				return this.GetTable<User_type>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Watch> Watches
		{
			get
			{
				return this.GetTable<Watch>();
			}
		}
		
		public System.Data.Linq.Table<Watch_mechanism> Watch_mechanisms
		{
			get
			{
				return this.GetTable<Watch_mechanism>();
			}
		}
		
		public System.Data.Linq.Table<Watch_type> Watch_types
		{
			get
			{
				return this.GetTable<Watch_type>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Auction")]
	public partial class Auction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_auction;
		
		private int _id_auction_type;
		
		private int _id_user;
		
		private int _auction_number;
		
		private string _name;
		
		private string _location;
		
		private System.DateTime _start_time;
		
		private System.DateTime _end_time;
		
		private string _description;
		
		private string _image_path;
		
		private EntitySet<Post> _Posts;
		
		private EntityRef<Auction_type> _Auction_type;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_auctionChanging(int value);
    partial void Onid_auctionChanged();
    partial void Onid_auction_typeChanging(int value);
    partial void Onid_auction_typeChanged();
    partial void Onid_userChanging(int value);
    partial void Onid_userChanged();
    partial void Onauction_numberChanging(int value);
    partial void Onauction_numberChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    partial void Onstart_timeChanging(System.DateTime value);
    partial void Onstart_timeChanged();
    partial void Onend_timeChanging(System.DateTime value);
    partial void Onend_timeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onimage_pathChanging(string value);
    partial void Onimage_pathChanged();
    #endregion
		
		public Auction()
		{
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			this._Auction_type = default(EntityRef<Auction_type>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_auction", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_auction
		{
			get
			{
				return this._id_auction;
			}
			set
			{
				if ((this._id_auction != value))
				{
					this.Onid_auctionChanging(value);
					this.SendPropertyChanging();
					this._id_auction = value;
					this.SendPropertyChanged("id_auction");
					this.Onid_auctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_auction_type", DbType="Int NOT NULL")]
		public int id_auction_type
		{
			get
			{
				return this._id_auction_type;
			}
			set
			{
				if ((this._id_auction_type != value))
				{
					if (this._Auction_type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_auction_typeChanging(value);
					this.SendPropertyChanging();
					this._id_auction_type = value;
					this.SendPropertyChanged("id_auction_type");
					this.Onid_auction_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_user", DbType="Int NOT NULL")]
		public int id_user
		{
			get
			{
				return this._id_user;
			}
			set
			{
				if ((this._id_user != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_userChanging(value);
					this.SendPropertyChanging();
					this._id_user = value;
					this.SendPropertyChanged("id_user");
					this.Onid_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_auction_number", DbType="Int NOT NULL")]
		public int auction_number
		{
			get
			{
				return this._auction_number;
			}
			set
			{
				if ((this._auction_number != value))
				{
					this.Onauction_numberChanging(value);
					this.SendPropertyChanging();
					this._auction_number = value;
					this.SendPropertyChanged("auction_number");
					this.Onauction_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="VarChar(250)")]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_time", DbType="DateTime NOT NULL")]
		public System.DateTime start_time
		{
			get
			{
				return this._start_time;
			}
			set
			{
				if ((this._start_time != value))
				{
					this.Onstart_timeChanging(value);
					this.SendPropertyChanging();
					this._start_time = value;
					this.SendPropertyChanged("start_time");
					this.Onstart_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_time", DbType="DateTime NOT NULL")]
		public System.DateTime end_time
		{
			get
			{
				return this._end_time;
			}
			set
			{
				if ((this._end_time != value))
				{
					this.Onend_timeChanging(value);
					this.SendPropertyChanging();
					this._end_time = value;
					this.SendPropertyChanged("end_time");
					this.Onend_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_path", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string image_path
		{
			get
			{
				return this._image_path;
			}
			set
			{
				if ((this._image_path != value))
				{
					this.Onimage_pathChanging(value);
					this.SendPropertyChanging();
					this._image_path = value;
					this.SendPropertyChanged("image_path");
					this.Onimage_pathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Auction_Post", Storage="_Posts", ThisKey="id_auction", OtherKey="id_auction")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Auction_type_Auction", Storage="_Auction_type", ThisKey="id_auction_type", OtherKey="id_auction_type", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Auction_type Auction_type
		{
			get
			{
				return this._Auction_type.Entity;
			}
			set
			{
				Auction_type previousValue = this._Auction_type.Entity;
				if (((previousValue != value) 
							|| (this._Auction_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Auction_type.Entity = null;
						previousValue.Auctions.Remove(this);
					}
					this._Auction_type.Entity = value;
					if ((value != null))
					{
						value.Auctions.Add(this);
						this._id_auction_type = value.id_auction_type;
					}
					else
					{
						this._id_auction_type = default(int);
					}
					this.SendPropertyChanged("Auction_type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Auction", Storage="_User", ThisKey="id_user", OtherKey="id_user", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Auctions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Auctions.Add(this);
						this._id_user = value.id_user;
					}
					else
					{
						this._id_user = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.Auction = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.Auction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Auction type]")]
	public partial class Auction_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_auction_type;
		
		private string _type_name;
		
		private EntitySet<Auction> _Auctions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_auction_typeChanging(int value);
    partial void Onid_auction_typeChanged();
    partial void Ontype_nameChanging(string value);
    partial void Ontype_nameChanged();
    #endregion
		
		public Auction_type()
		{
			this._Auctions = new EntitySet<Auction>(new Action<Auction>(this.attach_Auctions), new Action<Auction>(this.detach_Auctions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_auction_type", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_auction_type
		{
			get
			{
				return this._id_auction_type;
			}
			set
			{
				if ((this._id_auction_type != value))
				{
					this.Onid_auction_typeChanging(value);
					this.SendPropertyChanging();
					this._id_auction_type = value;
					this.SendPropertyChanged("id_auction_type");
					this.Onid_auction_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string type_name
		{
			get
			{
				return this._type_name;
			}
			set
			{
				if ((this._type_name != value))
				{
					this.Ontype_nameChanging(value);
					this.SendPropertyChanging();
					this._type_name = value;
					this.SendPropertyChanged("type_name");
					this.Ontype_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Auction_type_Auction", Storage="_Auctions", ThisKey="id_auction_type", OtherKey="id_auction_type")]
		public EntitySet<Auction> Auctions
		{
			get
			{
				return this._Auctions;
			}
			set
			{
				this._Auctions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Auctions(Auction entity)
		{
			this.SendPropertyChanging();
			entity.Auction_type = this;
		}
		
		private void detach_Auctions(Auction entity)
		{
			this.SendPropertyChanging();
			entity.Auction_type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Book")]
	public partial class Book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_book;
		
		private int _id_product;
		
		private int _id_condition;
		
		private string _author;
		
		private int _publication_year;
		
		private string _publishing_house;
		
		private int _page_number;
		
		private string _book_language;
		
		private EntityRef<Book_condition> _Book_condition;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_bookChanging(int value);
    partial void Onid_bookChanged();
    partial void Onid_productChanging(int value);
    partial void Onid_productChanged();
    partial void Onid_conditionChanging(int value);
    partial void Onid_conditionChanged();
    partial void OnauthorChanging(string value);
    partial void OnauthorChanged();
    partial void Onpublication_yearChanging(int value);
    partial void Onpublication_yearChanged();
    partial void Onpublishing_houseChanging(string value);
    partial void Onpublishing_houseChanged();
    partial void Onpage_numberChanging(int value);
    partial void Onpage_numberChanged();
    partial void Onbook_languageChanging(string value);
    partial void Onbook_languageChanged();
    #endregion
		
		public Book()
		{
			this._Book_condition = default(EntityRef<Book_condition>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_book", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_book
		{
			get
			{
				return this._id_book;
			}
			set
			{
				if ((this._id_book != value))
				{
					this.Onid_bookChanging(value);
					this.SendPropertyChanging();
					this._id_book = value;
					this.SendPropertyChanged("id_book");
					this.Onid_bookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_product", DbType="Int NOT NULL")]
		public int id_product
		{
			get
			{
				return this._id_product;
			}
			set
			{
				if ((this._id_product != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_productChanging(value);
					this.SendPropertyChanging();
					this._id_product = value;
					this.SendPropertyChanged("id_product");
					this.Onid_productChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_condition", DbType="Int NOT NULL")]
		public int id_condition
		{
			get
			{
				return this._id_condition;
			}
			set
			{
				if ((this._id_condition != value))
				{
					if (this._Book_condition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_conditionChanging(value);
					this.SendPropertyChanging();
					this._id_condition = value;
					this.SendPropertyChanged("id_condition");
					this.Onid_conditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string author
		{
			get
			{
				return this._author;
			}
			set
			{
				if ((this._author != value))
				{
					this.OnauthorChanging(value);
					this.SendPropertyChanging();
					this._author = value;
					this.SendPropertyChanged("author");
					this.OnauthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publication_year", DbType="Int NOT NULL")]
		public int publication_year
		{
			get
			{
				return this._publication_year;
			}
			set
			{
				if ((this._publication_year != value))
				{
					this.Onpublication_yearChanging(value);
					this.SendPropertyChanging();
					this._publication_year = value;
					this.SendPropertyChanged("publication_year");
					this.Onpublication_yearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publishing_house", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string publishing_house
		{
			get
			{
				return this._publishing_house;
			}
			set
			{
				if ((this._publishing_house != value))
				{
					this.Onpublishing_houseChanging(value);
					this.SendPropertyChanging();
					this._publishing_house = value;
					this.SendPropertyChanged("publishing_house");
					this.Onpublishing_houseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_number", DbType="Int NOT NULL")]
		public int page_number
		{
			get
			{
				return this._page_number;
			}
			set
			{
				if ((this._page_number != value))
				{
					this.Onpage_numberChanging(value);
					this.SendPropertyChanging();
					this._page_number = value;
					this.SendPropertyChanged("page_number");
					this.Onpage_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_language", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string book_language
		{
			get
			{
				return this._book_language;
			}
			set
			{
				if ((this._book_language != value))
				{
					this.Onbook_languageChanging(value);
					this.SendPropertyChanging();
					this._book_language = value;
					this.SendPropertyChanged("book_language");
					this.Onbook_languageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_condition_Book", Storage="_Book_condition", ThisKey="id_condition", OtherKey="id_book_condition", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Book_condition Book_condition
		{
			get
			{
				return this._Book_condition.Entity;
			}
			set
			{
				Book_condition previousValue = this._Book_condition.Entity;
				if (((previousValue != value) 
							|| (this._Book_condition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Book_condition.Entity = null;
						previousValue.Books.Remove(this);
					}
					this._Book_condition.Entity = value;
					if ((value != null))
					{
						value.Books.Add(this);
						this._id_condition = value.id_book_condition;
					}
					else
					{
						this._id_condition = default(int);
					}
					this.SendPropertyChanged("Book_condition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Book", Storage="_Product", ThisKey="id_product", OtherKey="id_product", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Books.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Books.Add(this);
						this._id_product = value.id_product;
					}
					else
					{
						this._id_product = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Book condition]")]
	public partial class Book_condition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_book_condition;
		
		private string _condition;
		
		private EntitySet<Book> _Books;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_book_conditionChanging(int value);
    partial void Onid_book_conditionChanged();
    partial void OnconditionChanging(string value);
    partial void OnconditionChanged();
    #endregion
		
		public Book_condition()
		{
			this._Books = new EntitySet<Book>(new Action<Book>(this.attach_Books), new Action<Book>(this.detach_Books));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_book_condition", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_book_condition
		{
			get
			{
				return this._id_book_condition;
			}
			set
			{
				if ((this._id_book_condition != value))
				{
					this.Onid_book_conditionChanging(value);
					this.SendPropertyChanging();
					this._id_book_condition = value;
					this.SendPropertyChanged("id_book_condition");
					this.Onid_book_conditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_condition", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string condition
		{
			get
			{
				return this._condition;
			}
			set
			{
				if ((this._condition != value))
				{
					this.OnconditionChanging(value);
					this.SendPropertyChanging();
					this._condition = value;
					this.SendPropertyChanged("condition");
					this.OnconditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_condition_Book", Storage="_Books", ThisKey="id_book_condition", OtherKey="id_condition")]
		public EntitySet<Book> Books
		{
			get
			{
				return this._Books;
			}
			set
			{
				this._Books.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Books(Book entity)
		{
			this.SendPropertyChanging();
			entity.Book_condition = this;
		}
		
		private void detach_Books(Book entity)
		{
			this.SendPropertyChanging();
			entity.Book_condition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Jewelry")]
	public partial class Jewelry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_jewelry;
		
		private int _id_product;
		
		private int _id_type;
		
		private string _brand;
		
		private decimal _weight;
		
		private int _creation_year;
		
		private EntityRef<Jewelry_type> _Jewelry_type;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_jewelryChanging(int value);
    partial void Onid_jewelryChanged();
    partial void Onid_productChanging(int value);
    partial void Onid_productChanged();
    partial void Onid_typeChanging(int value);
    partial void Onid_typeChanged();
    partial void OnbrandChanging(string value);
    partial void OnbrandChanged();
    partial void OnweightChanging(decimal value);
    partial void OnweightChanged();
    partial void Oncreation_yearChanging(int value);
    partial void Oncreation_yearChanged();
    #endregion
		
		public Jewelry()
		{
			this._Jewelry_type = default(EntityRef<Jewelry_type>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_jewelry", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_jewelry
		{
			get
			{
				return this._id_jewelry;
			}
			set
			{
				if ((this._id_jewelry != value))
				{
					this.Onid_jewelryChanging(value);
					this.SendPropertyChanging();
					this._id_jewelry = value;
					this.SendPropertyChanged("id_jewelry");
					this.Onid_jewelryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_product", DbType="Int NOT NULL")]
		public int id_product
		{
			get
			{
				return this._id_product;
			}
			set
			{
				if ((this._id_product != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_productChanging(value);
					this.SendPropertyChanging();
					this._id_product = value;
					this.SendPropertyChanged("id_product");
					this.Onid_productChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_type", DbType="Int NOT NULL")]
		public int id_type
		{
			get
			{
				return this._id_type;
			}
			set
			{
				if ((this._id_type != value))
				{
					if (this._Jewelry_type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_typeChanging(value);
					this.SendPropertyChanging();
					this._id_type = value;
					this.SendPropertyChanged("id_type");
					this.Onid_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brand", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string brand
		{
			get
			{
				return this._brand;
			}
			set
			{
				if ((this._brand != value))
				{
					this.OnbrandChanging(value);
					this.SendPropertyChanging();
					this._brand = value;
					this.SendPropertyChanged("brand");
					this.OnbrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Decimal(10,2) NOT NULL")]
		public decimal weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creation_year", DbType="Int NOT NULL")]
		public int creation_year
		{
			get
			{
				return this._creation_year;
			}
			set
			{
				if ((this._creation_year != value))
				{
					this.Oncreation_yearChanging(value);
					this.SendPropertyChanging();
					this._creation_year = value;
					this.SendPropertyChanged("creation_year");
					this.Oncreation_yearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jewelry_type_Jewelry", Storage="_Jewelry_type", ThisKey="id_type", OtherKey="id_jewelry_type", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Jewelry_type Jewelry_type
		{
			get
			{
				return this._Jewelry_type.Entity;
			}
			set
			{
				Jewelry_type previousValue = this._Jewelry_type.Entity;
				if (((previousValue != value) 
							|| (this._Jewelry_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jewelry_type.Entity = null;
						previousValue.Jewelries.Remove(this);
					}
					this._Jewelry_type.Entity = value;
					if ((value != null))
					{
						value.Jewelries.Add(this);
						this._id_type = value.id_jewelry_type;
					}
					else
					{
						this._id_type = default(int);
					}
					this.SendPropertyChanged("Jewelry_type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Jewelry", Storage="_Product", ThisKey="id_product", OtherKey="id_product", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Jewelries.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Jewelries.Add(this);
						this._id_product = value.id_product;
					}
					else
					{
						this._id_product = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Jewelry type]")]
	public partial class Jewelry_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_jewelry_type;
		
		private string _type;
		
		private EntitySet<Jewelry> _Jewelries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_jewelry_typeChanging(int value);
    partial void Onid_jewelry_typeChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public Jewelry_type()
		{
			this._Jewelries = new EntitySet<Jewelry>(new Action<Jewelry>(this.attach_Jewelries), new Action<Jewelry>(this.detach_Jewelries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_jewelry_type", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_jewelry_type
		{
			get
			{
				return this._id_jewelry_type;
			}
			set
			{
				if ((this._id_jewelry_type != value))
				{
					this.Onid_jewelry_typeChanging(value);
					this.SendPropertyChanging();
					this._id_jewelry_type = value;
					this.SendPropertyChanged("id_jewelry_type");
					this.Onid_jewelry_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jewelry_type_Jewelry", Storage="_Jewelries", ThisKey="id_jewelry_type", OtherKey="id_type")]
		public EntitySet<Jewelry> Jewelries
		{
			get
			{
				return this._Jewelries;
			}
			set
			{
				this._Jewelries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Jewelries(Jewelry entity)
		{
			this.SendPropertyChanging();
			entity.Jewelry_type = this;
		}
		
		private void detach_Jewelries(Jewelry entity)
		{
			this.SendPropertyChanging();
			entity.Jewelry_type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Painting")]
	public partial class Painting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_painting;
		
		private int _id_produs;
		
		private int _id_type;
		
		private string _artist;
		
		private int _creation_year;
		
		private decimal _length;
		
		private decimal _width;
		
		private EntityRef<Painting_type> _Painting_type;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_paintingChanging(int value);
    partial void Onid_paintingChanged();
    partial void Onid_produsChanging(int value);
    partial void Onid_produsChanged();
    partial void Onid_typeChanging(int value);
    partial void Onid_typeChanged();
    partial void OnartistChanging(string value);
    partial void OnartistChanged();
    partial void Oncreation_yearChanging(int value);
    partial void Oncreation_yearChanged();
    partial void OnlengthChanging(decimal value);
    partial void OnlengthChanged();
    partial void OnwidthChanging(decimal value);
    partial void OnwidthChanged();
    #endregion
		
		public Painting()
		{
			this._Painting_type = default(EntityRef<Painting_type>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_painting", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_painting
		{
			get
			{
				return this._id_painting;
			}
			set
			{
				if ((this._id_painting != value))
				{
					this.Onid_paintingChanging(value);
					this.SendPropertyChanging();
					this._id_painting = value;
					this.SendPropertyChanged("id_painting");
					this.Onid_paintingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_produs", DbType="Int NOT NULL")]
		public int id_produs
		{
			get
			{
				return this._id_produs;
			}
			set
			{
				if ((this._id_produs != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_produsChanging(value);
					this.SendPropertyChanging();
					this._id_produs = value;
					this.SendPropertyChanged("id_produs");
					this.Onid_produsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_type", DbType="Int NOT NULL")]
		public int id_type
		{
			get
			{
				return this._id_type;
			}
			set
			{
				if ((this._id_type != value))
				{
					if (this._Painting_type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_typeChanging(value);
					this.SendPropertyChanging();
					this._id_type = value;
					this.SendPropertyChanged("id_type");
					this.Onid_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_artist", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string artist
		{
			get
			{
				return this._artist;
			}
			set
			{
				if ((this._artist != value))
				{
					this.OnartistChanging(value);
					this.SendPropertyChanging();
					this._artist = value;
					this.SendPropertyChanged("artist");
					this.OnartistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creation_year", DbType="Int NOT NULL")]
		public int creation_year
		{
			get
			{
				return this._creation_year;
			}
			set
			{
				if ((this._creation_year != value))
				{
					this.Oncreation_yearChanging(value);
					this.SendPropertyChanging();
					this._creation_year = value;
					this.SendPropertyChanged("creation_year");
					this.Oncreation_yearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_length", DbType="Decimal(8,2) NOT NULL")]
		public decimal length
		{
			get
			{
				return this._length;
			}
			set
			{
				if ((this._length != value))
				{
					this.OnlengthChanging(value);
					this.SendPropertyChanging();
					this._length = value;
					this.SendPropertyChanged("length");
					this.OnlengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_width", DbType="Decimal(8,2) NOT NULL")]
		public decimal width
		{
			get
			{
				return this._width;
			}
			set
			{
				if ((this._width != value))
				{
					this.OnwidthChanging(value);
					this.SendPropertyChanging();
					this._width = value;
					this.SendPropertyChanged("width");
					this.OnwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Painting_type_Painting", Storage="_Painting_type", ThisKey="id_type", OtherKey="id_painting_type", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Painting_type Painting_type
		{
			get
			{
				return this._Painting_type.Entity;
			}
			set
			{
				Painting_type previousValue = this._Painting_type.Entity;
				if (((previousValue != value) 
							|| (this._Painting_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Painting_type.Entity = null;
						previousValue.Paintings.Remove(this);
					}
					this._Painting_type.Entity = value;
					if ((value != null))
					{
						value.Paintings.Add(this);
						this._id_type = value.id_painting_type;
					}
					else
					{
						this._id_type = default(int);
					}
					this.SendPropertyChanged("Painting_type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Painting", Storage="_Product", ThisKey="id_produs", OtherKey="id_product", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Paintings.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Paintings.Add(this);
						this._id_produs = value.id_product;
					}
					else
					{
						this._id_produs = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Painting type]")]
	public partial class Painting_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_painting_type;
		
		private string _type;
		
		private EntitySet<Painting> _Paintings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_painting_typeChanging(int value);
    partial void Onid_painting_typeChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public Painting_type()
		{
			this._Paintings = new EntitySet<Painting>(new Action<Painting>(this.attach_Paintings), new Action<Painting>(this.detach_Paintings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_painting_type", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_painting_type
		{
			get
			{
				return this._id_painting_type;
			}
			set
			{
				if ((this._id_painting_type != value))
				{
					this.Onid_painting_typeChanging(value);
					this.SendPropertyChanging();
					this._id_painting_type = value;
					this.SendPropertyChanged("id_painting_type");
					this.Onid_painting_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Painting_type_Painting", Storage="_Paintings", ThisKey="id_painting_type", OtherKey="id_type")]
		public EntitySet<Painting> Paintings
		{
			get
			{
				return this._Paintings;
			}
			set
			{
				this._Paintings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Paintings(Painting entity)
		{
			this.SendPropertyChanging();
			entity.Painting_type = this;
		}
		
		private void detach_Paintings(Painting entity)
		{
			this.SendPropertyChanging();
			entity.Painting_type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Post")]
	public partial class Post : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_post;
		
		private int _id_product;
		
		private int _id_status;
		
		private int _id_auction;
		
		private decimal _start_price;
		
		private decimal _list_price;
		
		private System.DateTime _created_at;
		
		private int _lot;
		
		private EntityRef<Auction> _Auction;
		
		private EntityRef<Post_status> _Post_status;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_postChanging(int value);
    partial void Onid_postChanged();
    partial void Onid_productChanging(int value);
    partial void Onid_productChanged();
    partial void Onid_statusChanging(int value);
    partial void Onid_statusChanged();
    partial void Onid_auctionChanging(int value);
    partial void Onid_auctionChanged();
    partial void Onstart_priceChanging(decimal value);
    partial void Onstart_priceChanged();
    partial void Onlist_priceChanging(decimal value);
    partial void Onlist_priceChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void OnlotChanging(int value);
    partial void OnlotChanged();
    #endregion
		
		public Post()
		{
			this._Auction = default(EntityRef<Auction>);
			this._Post_status = default(EntityRef<Post_status>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_post", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_post
		{
			get
			{
				return this._id_post;
			}
			set
			{
				if ((this._id_post != value))
				{
					this.Onid_postChanging(value);
					this.SendPropertyChanging();
					this._id_post = value;
					this.SendPropertyChanged("id_post");
					this.Onid_postChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_product", DbType="Int NOT NULL")]
		public int id_product
		{
			get
			{
				return this._id_product;
			}
			set
			{
				if ((this._id_product != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_productChanging(value);
					this.SendPropertyChanging();
					this._id_product = value;
					this.SendPropertyChanged("id_product");
					this.Onid_productChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_status", DbType="Int NOT NULL")]
		public int id_status
		{
			get
			{
				return this._id_status;
			}
			set
			{
				if ((this._id_status != value))
				{
					if (this._Post_status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_statusChanging(value);
					this.SendPropertyChanging();
					this._id_status = value;
					this.SendPropertyChanged("id_status");
					this.Onid_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_auction", DbType="Int NOT NULL")]
		public int id_auction
		{
			get
			{
				return this._id_auction;
			}
			set
			{
				if ((this._id_auction != value))
				{
					if (this._Auction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_auctionChanging(value);
					this.SendPropertyChanging();
					this._id_auction = value;
					this.SendPropertyChanged("id_auction");
					this.Onid_auctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal start_price
		{
			get
			{
				return this._start_price;
			}
			set
			{
				if ((this._start_price != value))
				{
					this.Onstart_priceChanging(value);
					this.SendPropertyChanging();
					this._start_price = value;
					this.SendPropertyChanged("start_price");
					this.Onstart_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_list_price", DbType="Decimal(10,2) NOT NULL")]
		public decimal list_price
		{
			get
			{
				return this._list_price;
			}
			set
			{
				if ((this._list_price != value))
				{
					this.Onlist_priceChanging(value);
					this.SendPropertyChanging();
					this._list_price = value;
					this.SendPropertyChanged("list_price");
					this.Onlist_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lot", DbType="Int NOT NULL")]
		public int lot
		{
			get
			{
				return this._lot;
			}
			set
			{
				if ((this._lot != value))
				{
					this.OnlotChanging(value);
					this.SendPropertyChanging();
					this._lot = value;
					this.SendPropertyChanged("lot");
					this.OnlotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Auction_Post", Storage="_Auction", ThisKey="id_auction", OtherKey="id_auction", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Auction Auction
		{
			get
			{
				return this._Auction.Entity;
			}
			set
			{
				Auction previousValue = this._Auction.Entity;
				if (((previousValue != value) 
							|| (this._Auction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Auction.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._Auction.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._id_auction = value.id_auction;
					}
					else
					{
						this._id_auction = default(int);
					}
					this.SendPropertyChanged("Auction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_status_Post", Storage="_Post_status", ThisKey="id_status", OtherKey="id_status", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Post_status Post_status
		{
			get
			{
				return this._Post_status.Entity;
			}
			set
			{
				Post_status previousValue = this._Post_status.Entity;
				if (((previousValue != value) 
							|| (this._Post_status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post_status.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._Post_status.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._id_status = value.id_status;
					}
					else
					{
						this._id_status = default(int);
					}
					this.SendPropertyChanged("Post_status");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Post", Storage="_Product", ThisKey="id_product", OtherKey="id_product", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._id_product = value.id_product;
					}
					else
					{
						this._id_product = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Post status]")]
	public partial class Post_status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_status;
		
		private string _status_name;
		
		private EntitySet<Post> _Posts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_statusChanging(int value);
    partial void Onid_statusChanged();
    partial void Onstatus_nameChanging(string value);
    partial void Onstatus_nameChanged();
    #endregion
		
		public Post_status()
		{
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_status", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_status
		{
			get
			{
				return this._id_status;
			}
			set
			{
				if ((this._id_status != value))
				{
					this.Onid_statusChanging(value);
					this.SendPropertyChanging();
					this._id_status = value;
					this.SendPropertyChanged("id_status");
					this.Onid_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string status_name
		{
			get
			{
				return this._status_name;
			}
			set
			{
				if ((this._status_name != value))
				{
					this.Onstatus_nameChanging(value);
					this.SendPropertyChanging();
					this._status_name = value;
					this.SendPropertyChanged("status_name");
					this.Onstatus_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_status_Post", Storage="_Posts", ThisKey="id_status", OtherKey="id_status")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.Post_status = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.Post_status = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_product;
		
		private string _name;
		
		private string _description;
		
		private System.Nullable<System.DateTime> _inventory_date;
		
		private EntitySet<Book> _Books;
		
		private EntitySet<Jewelry> _Jewelries;
		
		private EntitySet<Painting> _Paintings;
		
		private EntitySet<Post> _Posts;
		
		private EntitySet<Product_image> _Product_images;
		
		private EntitySet<Sculpture> _Sculptures;
		
		private EntitySet<Watch> _Watches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_productChanging(int value);
    partial void Onid_productChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Oninventory_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oninventory_dateChanged();
    #endregion
		
		public Product()
		{
			this._Books = new EntitySet<Book>(new Action<Book>(this.attach_Books), new Action<Book>(this.detach_Books));
			this._Jewelries = new EntitySet<Jewelry>(new Action<Jewelry>(this.attach_Jewelries), new Action<Jewelry>(this.detach_Jewelries));
			this._Paintings = new EntitySet<Painting>(new Action<Painting>(this.attach_Paintings), new Action<Painting>(this.detach_Paintings));
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			this._Product_images = new EntitySet<Product_image>(new Action<Product_image>(this.attach_Product_images), new Action<Product_image>(this.detach_Product_images));
			this._Sculptures = new EntitySet<Sculpture>(new Action<Sculpture>(this.attach_Sculptures), new Action<Sculpture>(this.detach_Sculptures));
			this._Watches = new EntitySet<Watch>(new Action<Watch>(this.attach_Watches), new Action<Watch>(this.detach_Watches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_product", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_product
		{
			get
			{
				return this._id_product;
			}
			set
			{
				if ((this._id_product != value))
				{
					this.Onid_productChanging(value);
					this.SendPropertyChanging();
					this._id_product = value;
					this.SendPropertyChanged("id_product");
					this.Onid_productChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inventory_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> inventory_date
		{
			get
			{
				return this._inventory_date;
			}
			set
			{
				if ((this._inventory_date != value))
				{
					this.Oninventory_dateChanging(value);
					this.SendPropertyChanging();
					this._inventory_date = value;
					this.SendPropertyChanged("inventory_date");
					this.Oninventory_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Book", Storage="_Books", ThisKey="id_product", OtherKey="id_product")]
		public EntitySet<Book> Books
		{
			get
			{
				return this._Books;
			}
			set
			{
				this._Books.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Jewelry", Storage="_Jewelries", ThisKey="id_product", OtherKey="id_product")]
		public EntitySet<Jewelry> Jewelries
		{
			get
			{
				return this._Jewelries;
			}
			set
			{
				this._Jewelries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Painting", Storage="_Paintings", ThisKey="id_product", OtherKey="id_produs")]
		public EntitySet<Painting> Paintings
		{
			get
			{
				return this._Paintings;
			}
			set
			{
				this._Paintings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Post", Storage="_Posts", ThisKey="id_product", OtherKey="id_product")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Product_image", Storage="_Product_images", ThisKey="id_product", OtherKey="id_product")]
		public EntitySet<Product_image> Product_images
		{
			get
			{
				return this._Product_images;
			}
			set
			{
				this._Product_images.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Sculpture", Storage="_Sculptures", ThisKey="id_product", OtherKey="id_product")]
		public EntitySet<Sculpture> Sculptures
		{
			get
			{
				return this._Sculptures;
			}
			set
			{
				this._Sculptures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Watch", Storage="_Watches", ThisKey="id_product", OtherKey="id_product")]
		public EntitySet<Watch> Watches
		{
			get
			{
				return this._Watches;
			}
			set
			{
				this._Watches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Books(Book entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Books(Book entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Jewelries(Jewelry entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Jewelries(Jewelry entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Paintings(Painting entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Paintings(Painting entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Product_images(Product_image entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Product_images(Product_image entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Sculptures(Sculpture entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Sculptures(Sculpture entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Watches(Watch entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Watches(Watch entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Product images]")]
	public partial class Product_image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_image;
		
		private int _id_product;
		
		private string _image_path;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_imageChanging(int value);
    partial void Onid_imageChanged();
    partial void Onid_productChanging(int value);
    partial void Onid_productChanged();
    partial void Onimage_pathChanging(string value);
    partial void Onimage_pathChanged();
    #endregion
		
		public Product_image()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_image", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_image
		{
			get
			{
				return this._id_image;
			}
			set
			{
				if ((this._id_image != value))
				{
					this.Onid_imageChanging(value);
					this.SendPropertyChanging();
					this._id_image = value;
					this.SendPropertyChanged("id_image");
					this.Onid_imageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_product", DbType="Int NOT NULL")]
		public int id_product
		{
			get
			{
				return this._id_product;
			}
			set
			{
				if ((this._id_product != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_productChanging(value);
					this.SendPropertyChanging();
					this._id_product = value;
					this.SendPropertyChanged("id_product");
					this.Onid_productChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_path", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string image_path
		{
			get
			{
				return this._image_path;
			}
			set
			{
				if ((this._image_path != value))
				{
					this.Onimage_pathChanging(value);
					this.SendPropertyChanging();
					this._image_path = value;
					this.SendPropertyChanged("image_path");
					this.Onimage_pathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Product_image", Storage="_Product", ThisKey="id_product", OtherKey="id_product", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Product_images.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Product_images.Add(this);
						this._id_product = value.id_product;
					}
					else
					{
						this._id_product = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sculpture")]
	public partial class Sculpture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_sculpture;
		
		private int _id_product;
		
		private int _id_sculpture_material;
		
		private string _artist;
		
		private decimal _length;
		
		private decimal _width;
		
		private decimal _depth;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Sculpture_material> _Sculpture_material;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_sculptureChanging(int value);
    partial void Onid_sculptureChanged();
    partial void Onid_productChanging(int value);
    partial void Onid_productChanged();
    partial void Onid_sculpture_materialChanging(int value);
    partial void Onid_sculpture_materialChanged();
    partial void OnartistChanging(string value);
    partial void OnartistChanged();
    partial void OnlengthChanging(decimal value);
    partial void OnlengthChanged();
    partial void OnwidthChanging(decimal value);
    partial void OnwidthChanged();
    partial void OndepthChanging(decimal value);
    partial void OndepthChanged();
    #endregion
		
		public Sculpture()
		{
			this._Product = default(EntityRef<Product>);
			this._Sculpture_material = default(EntityRef<Sculpture_material>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_sculpture", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_sculpture
		{
			get
			{
				return this._id_sculpture;
			}
			set
			{
				if ((this._id_sculpture != value))
				{
					this.Onid_sculptureChanging(value);
					this.SendPropertyChanging();
					this._id_sculpture = value;
					this.SendPropertyChanged("id_sculpture");
					this.Onid_sculptureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_product", DbType="Int NOT NULL")]
		public int id_product
		{
			get
			{
				return this._id_product;
			}
			set
			{
				if ((this._id_product != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_productChanging(value);
					this.SendPropertyChanging();
					this._id_product = value;
					this.SendPropertyChanged("id_product");
					this.Onid_productChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_sculpture_material", DbType="Int NOT NULL")]
		public int id_sculpture_material
		{
			get
			{
				return this._id_sculpture_material;
			}
			set
			{
				if ((this._id_sculpture_material != value))
				{
					if (this._Sculpture_material.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_sculpture_materialChanging(value);
					this.SendPropertyChanging();
					this._id_sculpture_material = value;
					this.SendPropertyChanged("id_sculpture_material");
					this.Onid_sculpture_materialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_artist", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string artist
		{
			get
			{
				return this._artist;
			}
			set
			{
				if ((this._artist != value))
				{
					this.OnartistChanging(value);
					this.SendPropertyChanging();
					this._artist = value;
					this.SendPropertyChanged("artist");
					this.OnartistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_length", DbType="Decimal(8,2) NOT NULL")]
		public decimal length
		{
			get
			{
				return this._length;
			}
			set
			{
				if ((this._length != value))
				{
					this.OnlengthChanging(value);
					this.SendPropertyChanging();
					this._length = value;
					this.SendPropertyChanged("length");
					this.OnlengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_width", DbType="Decimal(8,2) NOT NULL")]
		public decimal width
		{
			get
			{
				return this._width;
			}
			set
			{
				if ((this._width != value))
				{
					this.OnwidthChanging(value);
					this.SendPropertyChanging();
					this._width = value;
					this.SendPropertyChanged("width");
					this.OnwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_depth", DbType="Decimal(8,2) NOT NULL")]
		public decimal depth
		{
			get
			{
				return this._depth;
			}
			set
			{
				if ((this._depth != value))
				{
					this.OndepthChanging(value);
					this.SendPropertyChanging();
					this._depth = value;
					this.SendPropertyChanged("depth");
					this.OndepthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Sculpture", Storage="_Product", ThisKey="id_product", OtherKey="id_product", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Sculptures.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Sculptures.Add(this);
						this._id_product = value.id_product;
					}
					else
					{
						this._id_product = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sculpture_material_Sculpture", Storage="_Sculpture_material", ThisKey="id_sculpture_material", OtherKey="id_sculpture_material", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Sculpture_material Sculpture_material
		{
			get
			{
				return this._Sculpture_material.Entity;
			}
			set
			{
				Sculpture_material previousValue = this._Sculpture_material.Entity;
				if (((previousValue != value) 
							|| (this._Sculpture_material.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sculpture_material.Entity = null;
						previousValue.Sculptures.Remove(this);
					}
					this._Sculpture_material.Entity = value;
					if ((value != null))
					{
						value.Sculptures.Add(this);
						this._id_sculpture_material = value.id_sculpture_material;
					}
					else
					{
						this._id_sculpture_material = default(int);
					}
					this.SendPropertyChanged("Sculpture_material");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Sculpture material]")]
	public partial class Sculpture_material : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_sculpture_material;
		
		private string _material;
		
		private EntitySet<Sculpture> _Sculptures;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_sculpture_materialChanging(int value);
    partial void Onid_sculpture_materialChanged();
    partial void OnmaterialChanging(string value);
    partial void OnmaterialChanged();
    #endregion
		
		public Sculpture_material()
		{
			this._Sculptures = new EntitySet<Sculpture>(new Action<Sculpture>(this.attach_Sculptures), new Action<Sculpture>(this.detach_Sculptures));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_sculpture_material", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_sculpture_material
		{
			get
			{
				return this._id_sculpture_material;
			}
			set
			{
				if ((this._id_sculpture_material != value))
				{
					this.Onid_sculpture_materialChanging(value);
					this.SendPropertyChanging();
					this._id_sculpture_material = value;
					this.SendPropertyChanged("id_sculpture_material");
					this.Onid_sculpture_materialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_material", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string material
		{
			get
			{
				return this._material;
			}
			set
			{
				if ((this._material != value))
				{
					this.OnmaterialChanging(value);
					this.SendPropertyChanging();
					this._material = value;
					this.SendPropertyChanged("material");
					this.OnmaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sculpture_material_Sculpture", Storage="_Sculptures", ThisKey="id_sculpture_material", OtherKey="id_sculpture_material")]
		public EntitySet<Sculpture> Sculptures
		{
			get
			{
				return this._Sculptures;
			}
			set
			{
				this._Sculptures.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sculptures(Sculpture entity)
		{
			this.SendPropertyChanging();
			entity.Sculpture_material = this;
		}
		
		private void detach_Sculptures(Sculpture entity)
		{
			this.SendPropertyChanging();
			entity.Sculpture_material = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User role]")]
	public partial class User_role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_role;
		
		private int _id_user;
		
		private int _id_tip;
		
		private System.DateTime _role_date;
		
		private EntityRef<User_type> _User_type;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_roleChanging(int value);
    partial void Onid_roleChanged();
    partial void Onid_userChanging(int value);
    partial void Onid_userChanged();
    partial void Onid_tipChanging(int value);
    partial void Onid_tipChanged();
    partial void Onrole_dateChanging(System.DateTime value);
    partial void Onrole_dateChanged();
    #endregion
		
		public User_role()
		{
			this._User_type = default(EntityRef<User_type>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_role", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_role
		{
			get
			{
				return this._id_role;
			}
			set
			{
				if ((this._id_role != value))
				{
					this.Onid_roleChanging(value);
					this.SendPropertyChanging();
					this._id_role = value;
					this.SendPropertyChanged("id_role");
					this.Onid_roleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_user", DbType="Int NOT NULL")]
		public int id_user
		{
			get
			{
				return this._id_user;
			}
			set
			{
				if ((this._id_user != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_userChanging(value);
					this.SendPropertyChanging();
					this._id_user = value;
					this.SendPropertyChanged("id_user");
					this.Onid_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_tip", DbType="Int NOT NULL")]
		public int id_tip
		{
			get
			{
				return this._id_tip;
			}
			set
			{
				if ((this._id_tip != value))
				{
					if (this._User_type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_tipChanging(value);
					this.SendPropertyChanging();
					this._id_tip = value;
					this.SendPropertyChanged("id_tip");
					this.Onid_tipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_date", DbType="DateTime NOT NULL")]
		public System.DateTime role_date
		{
			get
			{
				return this._role_date;
			}
			set
			{
				if ((this._role_date != value))
				{
					this.Onrole_dateChanging(value);
					this.SendPropertyChanging();
					this._role_date = value;
					this.SendPropertyChanged("role_date");
					this.Onrole_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_type_User_role", Storage="_User_type", ThisKey="id_tip", OtherKey="id_type", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User_type User_type
		{
			get
			{
				return this._User_type.Entity;
			}
			set
			{
				User_type previousValue = this._User_type.Entity;
				if (((previousValue != value) 
							|| (this._User_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User_type.Entity = null;
						previousValue.User_roles.Remove(this);
					}
					this._User_type.Entity = value;
					if ((value != null))
					{
						value.User_roles.Add(this);
						this._id_tip = value.id_type;
					}
					else
					{
						this._id_tip = default(int);
					}
					this.SendPropertyChanged("User_type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_role", Storage="_User", ThisKey="id_user", OtherKey="id_user", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.User_roles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.User_roles.Add(this);
						this._id_user = value.id_user;
					}
					else
					{
						this._id_user = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User type]")]
	public partial class User_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_type;
		
		private string _name;
		
		private EntitySet<User_role> _User_roles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_typeChanging(int value);
    partial void Onid_typeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public User_type()
		{
			this._User_roles = new EntitySet<User_role>(new Action<User_role>(this.attach_User_roles), new Action<User_role>(this.detach_User_roles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_type", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_type
		{
			get
			{
				return this._id_type;
			}
			set
			{
				if ((this._id_type != value))
				{
					this.Onid_typeChanging(value);
					this.SendPropertyChanging();
					this._id_type = value;
					this.SendPropertyChanged("id_type");
					this.Onid_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_type_User_role", Storage="_User_roles", ThisKey="id_type", OtherKey="id_tip")]
		public EntitySet<User_role> User_roles
		{
			get
			{
				return this._User_roles;
			}
			set
			{
				this._User_roles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User_roles(User_role entity)
		{
			this.SendPropertyChanging();
			entity.User_type = this;
		}
		
		private void detach_User_roles(User_role entity)
		{
			this.SendPropertyChanging();
			entity.User_type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_user;
		
		private string _fisrt_name;
		
		private string _last_name;
		
		private string _username;
		
		private string _email;
		
		private string _password;
		
		private string _salt;
		
		private System.Nullable<System.DateTime> _created_at;
		
		private System.Nullable<System.DateTime> _last_login;
		
		private System.Nullable<decimal> _balance;
		
		private EntitySet<Auction> _Auctions;
		
		private EntitySet<User_role> _User_roles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_userChanging(int value);
    partial void Onid_userChanged();
    partial void Onfisrt_nameChanging(string value);
    partial void Onfisrt_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnsaltChanging(string value);
    partial void OnsaltChanged();
    partial void Oncreated_atChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_atChanged();
    partial void Onlast_loginChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_loginChanged();
    partial void OnbalanceChanging(System.Nullable<decimal> value);
    partial void OnbalanceChanged();
    #endregion
		
		public User()
		{
			this._Auctions = new EntitySet<Auction>(new Action<Auction>(this.attach_Auctions), new Action<Auction>(this.detach_Auctions));
			this._User_roles = new EntitySet<User_role>(new Action<User_role>(this.attach_User_roles), new Action<User_role>(this.detach_User_roles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_user", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_user
		{
			get
			{
				return this._id_user;
			}
			set
			{
				if ((this._id_user != value))
				{
					this.Onid_userChanging(value);
					this.SendPropertyChanging();
					this._id_user = value;
					this.SendPropertyChanged("id_user");
					this.Onid_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fisrt_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string fisrt_name
		{
			get
			{
				return this._fisrt_name;
			}
			set
			{
				if ((this._fisrt_name != value))
				{
					this.Onfisrt_nameChanging(value);
					this.SendPropertyChanging();
					this._fisrt_name = value;
					this.SendPropertyChanged("fisrt_name");
					this.Onfisrt_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salt", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string salt
		{
			get
			{
				return this._salt;
			}
			set
			{
				if ((this._salt != value))
				{
					this.OnsaltChanging(value);
					this.SendPropertyChanging();
					this._salt = value;
					this.SendPropertyChanged("salt");
					this.OnsaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_login", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_login
		{
			get
			{
				return this._last_login;
			}
			set
			{
				if ((this._last_login != value))
				{
					this.Onlast_loginChanging(value);
					this.SendPropertyChanging();
					this._last_login = value;
					this.SendPropertyChanged("last_login");
					this.Onlast_loginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this.OnbalanceChanging(value);
					this.SendPropertyChanging();
					this._balance = value;
					this.SendPropertyChanged("balance");
					this.OnbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Auction", Storage="_Auctions", ThisKey="id_user", OtherKey="id_user")]
		public EntitySet<Auction> Auctions
		{
			get
			{
				return this._Auctions;
			}
			set
			{
				this._Auctions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_role", Storage="_User_roles", ThisKey="id_user", OtherKey="id_user")]
		public EntitySet<User_role> User_roles
		{
			get
			{
				return this._User_roles;
			}
			set
			{
				this._User_roles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Auctions(Auction entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Auctions(Auction entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_User_roles(User_role entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_User_roles(User_role entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Watch")]
	public partial class Watch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_watch;
		
		private System.Nullable<int> _id_product;
		
		private System.Nullable<int> _id_mechanism;
		
		private decimal _diameter;
		
		private string _manufacturer;
		
		private int _id_type;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Watch_mechanism> _Watch_mechanism;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_watchChanging(int value);
    partial void Onid_watchChanged();
    partial void Onid_productChanging(System.Nullable<int> value);
    partial void Onid_productChanged();
    partial void Onid_mechanismChanging(System.Nullable<int> value);
    partial void Onid_mechanismChanged();
    partial void OndiameterChanging(decimal value);
    partial void OndiameterChanged();
    partial void OnmanufacturerChanging(string value);
    partial void OnmanufacturerChanged();
    partial void Onid_typeChanging(int value);
    partial void Onid_typeChanged();
    #endregion
		
		public Watch()
		{
			this._Product = default(EntityRef<Product>);
			this._Watch_mechanism = default(EntityRef<Watch_mechanism>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_watch", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_watch
		{
			get
			{
				return this._id_watch;
			}
			set
			{
				if ((this._id_watch != value))
				{
					this.Onid_watchChanging(value);
					this.SendPropertyChanging();
					this._id_watch = value;
					this.SendPropertyChanged("id_watch");
					this.Onid_watchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_product", DbType="Int")]
		public System.Nullable<int> id_product
		{
			get
			{
				return this._id_product;
			}
			set
			{
				if ((this._id_product != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_productChanging(value);
					this.SendPropertyChanging();
					this._id_product = value;
					this.SendPropertyChanged("id_product");
					this.Onid_productChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_mechanism", DbType="Int")]
		public System.Nullable<int> id_mechanism
		{
			get
			{
				return this._id_mechanism;
			}
			set
			{
				if ((this._id_mechanism != value))
				{
					if (this._Watch_mechanism.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_mechanismChanging(value);
					this.SendPropertyChanging();
					this._id_mechanism = value;
					this.SendPropertyChanged("id_mechanism");
					this.Onid_mechanismChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diameter", DbType="Decimal(5,2) NOT NULL")]
		public decimal diameter
		{
			get
			{
				return this._diameter;
			}
			set
			{
				if ((this._diameter != value))
				{
					this.OndiameterChanging(value);
					this.SendPropertyChanging();
					this._diameter = value;
					this.SendPropertyChanged("diameter");
					this.OndiameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manufacturer", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string manufacturer
		{
			get
			{
				return this._manufacturer;
			}
			set
			{
				if ((this._manufacturer != value))
				{
					this.OnmanufacturerChanging(value);
					this.SendPropertyChanging();
					this._manufacturer = value;
					this.SendPropertyChanged("manufacturer");
					this.OnmanufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_type", DbType="Int NOT NULL")]
		public int id_type
		{
			get
			{
				return this._id_type;
			}
			set
			{
				if ((this._id_type != value))
				{
					this.Onid_typeChanging(value);
					this.SendPropertyChanging();
					this._id_type = value;
					this.SendPropertyChanged("id_type");
					this.Onid_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Watch", Storage="_Product", ThisKey="id_product", OtherKey="id_product", IsForeignKey=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Watches.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Watches.Add(this);
						this._id_product = value.id_product;
					}
					else
					{
						this._id_product = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Watch_mechanism_Watch", Storage="_Watch_mechanism", ThisKey="id_mechanism", OtherKey="id_mechanism", IsForeignKey=true, DeleteRule="CASCADE")]
		public Watch_mechanism Watch_mechanism
		{
			get
			{
				return this._Watch_mechanism.Entity;
			}
			set
			{
				Watch_mechanism previousValue = this._Watch_mechanism.Entity;
				if (((previousValue != value) 
							|| (this._Watch_mechanism.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Watch_mechanism.Entity = null;
						previousValue.Watches.Remove(this);
					}
					this._Watch_mechanism.Entity = value;
					if ((value != null))
					{
						value.Watches.Add(this);
						this._id_mechanism = value.id_mechanism;
					}
					else
					{
						this._id_mechanism = default(Nullable<int>);
					}
					this.SendPropertyChanged("Watch_mechanism");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Watch mechanism]")]
	public partial class Watch_mechanism : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_mechanism;
		
		private string _mechanism;
		
		private EntitySet<Watch> _Watches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_mechanismChanging(int value);
    partial void Onid_mechanismChanged();
    partial void OnmechanismChanging(string value);
    partial void OnmechanismChanged();
    #endregion
		
		public Watch_mechanism()
		{
			this._Watches = new EntitySet<Watch>(new Action<Watch>(this.attach_Watches), new Action<Watch>(this.detach_Watches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_mechanism", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_mechanism
		{
			get
			{
				return this._id_mechanism;
			}
			set
			{
				if ((this._id_mechanism != value))
				{
					this.Onid_mechanismChanging(value);
					this.SendPropertyChanging();
					this._id_mechanism = value;
					this.SendPropertyChanged("id_mechanism");
					this.Onid_mechanismChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mechanism", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string mechanism
		{
			get
			{
				return this._mechanism;
			}
			set
			{
				if ((this._mechanism != value))
				{
					this.OnmechanismChanging(value);
					this.SendPropertyChanging();
					this._mechanism = value;
					this.SendPropertyChanged("mechanism");
					this.OnmechanismChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Watch_mechanism_Watch", Storage="_Watches", ThisKey="id_mechanism", OtherKey="id_mechanism")]
		public EntitySet<Watch> Watches
		{
			get
			{
				return this._Watches;
			}
			set
			{
				this._Watches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Watches(Watch entity)
		{
			this.SendPropertyChanging();
			entity.Watch_mechanism = this;
		}
		
		private void detach_Watches(Watch entity)
		{
			this.SendPropertyChanging();
			entity.Watch_mechanism = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Watch type]")]
	public partial class Watch_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_watch_type;
		
		private string _type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_watch_typeChanging(int value);
    partial void Onid_watch_typeChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public Watch_type()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_watch_type", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_watch_type
		{
			get
			{
				return this._id_watch_type;
			}
			set
			{
				if ((this._id_watch_type != value))
				{
					this.Onid_watch_typeChanging(value);
					this.SendPropertyChanging();
					this._id_watch_type = value;
					this.SendPropertyChanged("id_watch_type");
					this.Onid_watch_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
